# 머신러닝과 딥러닝 (머신러닝과 딥러닝의 비교 2)
#
# 1장. 딥러닝 개념과 활용
#
#  2.3 Feature Engineering
#    - Feature engineering은 데이터 복잡성을 줄이고 학습 알고리즘에서 패턴을 보다 잘 보이게 하는 과정
#    - 이 과정은 많은 시간과 전문가가 필요하다는 점에서 어렵고 비쌈
#    - 머신러닝은 대부분의 적용된 변수(feature)는 전문가가 식별한 다음 정보 영역 및 데이터 유형별로 코딩한
#      예) 신용평가 모형 개발에서 사용되는 50여개의 변수 중 비즈니스 여건이나 금융당국에 의해 제거되어야 하는
#          (학력, 성별 등)가 있을 수 있기 때문에, 전문가가 직접 확인하고 걸러내는 작업이 필요
#    - 딥러닝은 High-level features를 학습하며 모든 과제에서 새로운 변수 추출이라는 작업을 줄여줌
#    - Convolutional Neural Network의 경우, 초기 layer에서는 이미지의 edge나 line 같은 low-level features를 
#      학습하고 그 다음 이미지의 high-level 표현을 학습함
#  
#  2.4 문제 해결 접근법(problem solving approach) 
#    - 전통적인 머신러닝 알고리즘으로 문제를 해결할 때는 주로 문제를 여러 개의 파트로 나눈 후,
#      각각의 답을 구하고 그 결과를 합치는 방법을 추천
#    - 딥러닝은 end-to-enbd 방식으로 문제를 해결
#
#    ### 사물인지 프로젝트의 경우,
#    - 머신러닝 접근 방법은 1. 사물탐지 --> 2 사물인지의 2단계로 나누어 학습함
#      1. 사물탐색: grabcut과 같은 경계탐지 알고리즘(bound box detection algorithm)을 사용하여 이미지를 
#          훑어보고 가능한 모든 객체를 추출
#      2. 사물인지:모든 객체들을 SVM과 같은 객체 인식 알고리즘으로 관련 객체를 인식함
#   
#    - 딥러닝 접근 방법은 end-to-end 방식인 YOLO net에서 이미지를 전달하면 객체의 이름과 위치가 표시됨  
#
#  2.5실행 시간(Execution time)
#    - 딥 러닝 알고리즘은 훈련 시간이 굉장히 오래 걸림
#    - 딥 러닝 알고리즘은 다른 알고리즘에 비해 변수가 너무 많기 때문에
#      ResNet의 경우, training이 약 2주 정도 걸림
#    - 머신 러닝의 경우, 수초에서 수시간이면 거의 훈련이 끝남
#
#  2.6 해석력(Interpretability)
#    - 이 요인이 딥 러닝을 실제 실무에 쓰려 마음 먹으면, 그 전에 10번 정도 고민하는 이유
#    - 에세이의 점수를 자동으로 매기는 과제의 경우, 팁 러닝의 성능은 사람이 한 것과 유사할 정도로 뛰어나지만
#      아주 치명적인 문제가 있음 --> 왜 이 점수가 부여됐는지 알 수가 없기 때문
#    - 수학적으로 딥 러닝의 어느 노두가 활성화되었는지 알 수 있지만 우리는 거기에 어떤 뉴런이 만들어 졌는지, 
#      그리고 이들 뉴런 레이어가 전체적으로 무엇을 하고 있는지 알지 못하기 때문에 해석하기 힘듦
#
#
