##### NumPy - 배열 연산과 인덱싱, 슬라이싱 (배열 연산 2, 배열의 인덱싱과 슬라이싱)
# 
# 다. 배열의 인덱싱과 슬라이싱
#  1) 배열의 인덱싱
#   - 배열의 위치나 조건을 지정해 배열의 원소를 선택하는 것
#     . 배열명[위치]                        # 1차원 배열에서 특정 위치의 원소 선택
#     . 배열명[[위치1, 위치2, ..., 위치n]]   # 1차원 배열에서 여러 원소 선택
#     . 배열명[[해우이치, 열위치]]           # 2차원 배열에서 특정 원소 선택
#     . 배열명[[행위치, 행위치2,...][열위치1, 열위치2,...]]  # 2차원 배열에서 여러 원소 선택
#     . 배열명[조건]                         # 조건을 만족하는 배열 선택

import numpy as np

index1 = np.array([0,10,20,30,40,50])
index1

index1[0]
index1[4]

index1[5] = 100

index1[[0,2,4]]

index2 = np.arange(10,100,10).reshape(3, 3)
index2

index2[0,2]
index2[2,2]

index2[1]
index2[1] = [44,57,66]
index2

index2[[0,2],[0,1]]
index2[[0,2,2],[0,1,2]]

index = np.array([1,2,3,4,5,6])

index[(index%2)==0]

#  2) 배열의 슬라이싱
#   - 범위를 지정해 배열의 일부분을 선택하는 방법
#     . 배열명[시작위치:끝위치]                            # 1차원 배열, 시작위치 미 지정 시 0부터 시작
#     . 배열명[행시작위치:행끝위치, 열시작위치:열끝위치]     # 2차원 배열에서 범위로 선택 
#     . 배열명[[행위치],[열시작위치:열끝위치]]              # 특정 행 선택 후 열 슬라이싱
#

slice1 = np.array([10,20,30,40,50])
slice1[1:5]
slice1[:3]
slice1[2:]
slice1[2:5] = np.array([25,35,45]) 
slice1
slice1[3:6] = 60

slice2 = np.arange(10,100,10).reshape(3,3)
slice2
slice2[1:3,1:3]
slice2[:3,1:]
slice2[0:2,1:3] = np.array([[23,35],[55,65]])
slice2

