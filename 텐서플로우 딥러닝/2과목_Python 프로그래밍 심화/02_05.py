##### NumPy - 배열 연산과 인덱싱, 슬라이싱 (실습테스트)
# 
# 1. 5*6 형태의 데이터 행렬을 만들고 이 데이터에 대해 다음의 값들을 구하시오
#    (아래의 코드를 활용하시오)
#
#     > x = np.random.rand(5,6) 
#     > x = x.round(3)*100
#
#     1) 전체의 최대값
#     2) 전체의 최소값
#     3) 평균  
#     4) 표준편차
#     5) 분산
#
# 2. 다음과 같은 행렬이 있다.
#
#     > arr1 = array([[0,1,2,3,4],
#     >              [5,6,7,8,9],
#     >              [10,11,12,13,14]])
#      
#   위의 코드를 보고 다음 문제들을 풀어보시오/   
#
#    1) arr1 행렬을 생성한다.
#    2) 행렬에서 값 7을 인덱싱한다.
#    3) 행렬에서 값 14를 인덱싱한다.
#    4) 행렬에서 배열 [6,7]을 슬라이싱한다.
#    5) 행렬에서 배열 [7,12]를 슬라이싱한다.
#    6) 행렬에서 배열 [[3,4],[8,9]]를 슬라이싱한다.
#
# 3. 1부터 30까지의 서로 다른 난수 10개씩 집합 A,B를 생성하고, 이들의 교집합을 찾는 
#    코딩함수를 만들어 보고자 한다.
#    
#    1) 집합 A,B가 있을 때 집단들의 교집합을 찾는 코딩함수를 만들어 보시오.
#
#    2) Low(min 값)부터 High(max 값)까지의 서로 다른 난 수 how-many(개수)씩 
#       집합 A,B를 생성하는 코딩 함수를 만들어 보시오
#
#    3) 1)과 2)에서 만든 함수를 활용하여 1부터 30까지의 서로 다른 난수 10개씩 
#       집합 A,B의 교집합을 생성하시오

